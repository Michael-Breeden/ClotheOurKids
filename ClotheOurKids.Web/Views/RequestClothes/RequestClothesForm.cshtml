@model ClotheOurKids.Web.Models.ViewModel.RequestFormViewModel

@section pageCSS
{
    <style type="text/css">
        [type=checkbox]:checked.filled-in+label:after {
            border: 2px solid #4285f4;
            background-color: #4285f4;
        }

        h4, h5 {
            color: #757575;
        }

        /*#Sizes div[class^="col-"], div[class*=" col-"] {
            -webkit-transition: all .5s ease-in-out;
            -moz-transition: all .5s ease-in-out;
            -o-transition: all .5s ease-in-out;
            transition: all .5s ease-in-out;
        }*/
    </style>    
}

@{ 
    ViewBag.Title = "Request Clothes";
}

<div class="container">

    <section class="section page-top-section mb-4 wow fadeIn" data-wow-delay="0.2s">
        <div class="row">
            <div class="col-12">
                <h1 class="section-heading">Request Clothes For A Child</h1>
            </div>
            <div class="col-12">
                <p class="section-description"><i><strong>Giving</strong> clothes. <strong>Showing</strong> love. <strong>Building</strong> confidence.</i></p>
            </div>
        </div>
    </section>

    <hr class="between-sections">

    <!--Section Clothing Request-->
    <div class="section wow fadeIn" data-wow-delay="0.6s">
        <div class="card z-depth-3">
            <div class="card-block">

                <!--Header-->
                <div class="form-header blue darken-4">
                    <h1 class="h1-responsive"><i class="fa fa-gift"></i> Clothing Request</h1>
                </div>
                <!--/Header-->

                <!--Body-->
                @using (Html.BeginForm("RequestClothesForm", "RequestClothes", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                {
                    @Html.AntiForgeryToken()

                    <!--/Fifth row-->
                    <div class="row mt-3">
                        <div class="col-md">
                            <h2 class="h2-responsive text-center">Child Information</h2>
                            <br />
                        </div>
                    </div>
                    <!--/Fifth row-->

                    <!--Sixth row-->
                    <div class="row mt-2">
                        <div class="col-md">
                            <div class="md-form has-icon">
                                <i class="fa fa-neuter prefix"></i>
                                @Html.LabelFor(m => m.GenderId, new { @class = "select2-label" })
                                @Html.DropDownListFor(m => m.GenderId, Model.AvailableGenders, new { @class = "mdb-select md-select2" })
                                @Html.ValidationMessageFor(m => m.GenderId)
                            </div>
                        </div>
                        <div class="col-md">
                            <div class="md-form has-icon">
                                <i class="fa fa-graduation-cap prefix"></i>
                                @Html.LabelFor(m => m.GradeId, new { @class = "select2-label" })
                                @Html.DropDownListFor(m => m.GradeId, Model.AvailableGrades, new { @class = "mdb-select md-select2" })
                                @Html.ValidationMessageFor(m => m.GradeId)
                            </div>
                        </div>
                    </div>
                    <!--/Sixth row-->

                    <!--Sixth row-->

                    <!--Hide this row if the user works at a school. The school will be defaulted to their own school-->
                    var hideRowClass = Model.officeType == "School" ? "hidden-xs-up" : "";

                    <div class="row mt-2 @hideRowClass">
                        <div class="col-md">
                            <div class="md-form">
                                <i class="fa fa-neuter prefix"></i>
                                @Html.LabelFor(m => m.SchoolId, new { @class = "select2-label" })
                                @Html.DropDownListFor(m => m.SchoolId, Model.AvailableSchools, new { @class = "mdb-select md-select2" })
                                @Html.ValidationMessageFor(m => m.SchoolId)
                            </div>
                        </div>
                    </div>

                    <!--/Sixth row-->

                    <!--Seventh row-->
                    <div class="mt-1 mb-3" style="border: 0; border-top: 1px solid rgba(0, 0, 0, 0.1);"></div>
                    <div class="row">
                        <!--First column-->
                        <div class="col-12 mb-1 d-flex justify-content-center">
                            <h4 class="h4-responsive">How Quickly Does This Need to Be Delivered?</h4>
                        </div>
                        <!--/First column-->
                        <!--Second column-->
                        <div class="col d-flex flex-column justify-content-center">
                            @{
                                foreach (var urgency in Model.AvailableUrgencies)
                                {
                                    <div class="form-group mr-4">
                                        @Html.RadioButtonFor(m => m.UrgencyId, urgency.Value, new { id = "urgency" + urgency.Value, @class = "with-gap" })
                                        @Html.Label("urgency" + urgency.Value, urgency.Text)
                                    </div>
                                }
                                @Html.ValidationMessageFor(m => m.UrgencyId)
                            }
                        </div>
                        <!--/Second column-->
                    </div>
                    <!--/Seventh row-->

                    <!--Seventh row-->
                    <div class="row mt-3">
                        <!--First column-->
                        <div id="divNeededItems" class="col">
                            <h4 class="h4-responsive text-center mb-2">Which Items Should We Pack For This Child?</h4>
                                                        
                            <div class="row justify-content-center">
                                <div class="col-md-9 col-md-offset-3">
                                    <div class="d-flex flex-wrap">
                                        <fieldset class="form-group ml-4">                                            
                                            @Html.CheckBoxFor(m => m.NeedShirt, new { @class="filled-in", data_details = "divShirtSizes"})
                                            @Html.LabelFor(m => m.NeedShirt)
                                        </fieldset>
                                        <fieldset class="form-group ml-4">                                            
                                            @Html.CheckBoxFor(m => m.NeedPant, new { @class = "filled-in", data_details = "divPantSizes" })
                                            @Html.LabelFor(m => m.NeedPant)
                                        </fieldset>
                                        <fieldset class="form-group ml-4">
                                            @Html.CheckBoxFor(m => m.NeedUnderwear, new { @class = "filled-in", data_details = "divUnderwearSizes" })
                                            @Html.LabelFor(m => m.NeedUnderwear)
                                        </fieldset>
                                        <fieldset class="form-group ml-4">
                                            @Html.CheckBoxFor(m => m.NeedSocks, new { @class = "filled-in", data_details = "divSockSizes" })
                                            @Html.LabelFor(m => m.NeedSocks)
                                        </fieldset>
                                        <fieldset class="form-group ml-4">
                                            @Html.CheckBoxFor(m => m.NeedShoes, new { @class = "filled-in", data_details = "divShoeSizes" })
                                            @Html.LabelFor(m => m.NeedShoes)
                                        </fieldset>
                                        <fieldset class="form-group ml-4">
                                            @Html.CheckBoxFor(m => m.NeedCoat, new { @class = "filled-in", data_details = "divCoatSizes" })
                                            @Html.LabelFor(m => m.NeedCoat)
                                        </fieldset>
                                        <fieldset class="form-group ml-4">
                                            @Html.CheckBoxFor(m => m.NeedHygiene, new { @class = "filled-in", data_details = "divHygiene" })
                                            @Html.LabelFor(m => m.NeedHygiene)
                                        </fieldset>
                                    </div>        
                                </div>
                            </div>
                            
                        </div>
                        <!--/First column-->
                    </div>
                    <!--/Seventh row-->

                    <!--Eigth row-->
                    <div class="row mt-4">                       

                        <!--First column-->
                        <div class="col col-md-6">                            
                            @*<h4 class="h4-responsive">Shirt Size</h4>*@
                            <div class="row mt-1">
                                <div class="col">
                                    <div id="divShirtSizes" class="md-form">
                                        @Html.LabelFor(m => m.ShirtAgeGroupId, new { @class = "select2-label" })
                                        @Html.DropDownListFor(m => m.ShirtAgeGroupId, Model.AvailableShirtAgeGroups, new { @class = "mdb-select md-select2" })
                                        @Html.ValidationMessageFor(m => m.ShirtAgeGroupId)
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col">
                                    <div class="md-form">
                                        @Html.LabelFor(m => m.ShirtSizeId, new { @class = "select2-label" })
                                        @Html.DropDownListFor(m => m.ShirtSizeId, Model.AvailableShirtSizes, new { @class = "mdb-select md-select2" })
                                        @Html.ValidationMessageFor(m => m.ShirtSizeId)
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!--/First column-->

                        <!--Second column-->
                        <div class="col col-md-6">
                            @*<h4 class="h4-responsive">Pant Size</h4>*@
                            <div class="row mt-1">
                                <div class="col">
                                    <div id="divPantSizes" class="md-form">
                                        @Html.LabelFor(m => m.PantAgeGroupId, new { @class = "select2-label" })
                                        @Html.DropDownListFor(m => m.PantAgeGroupId, Model.AvailablePantAgeGroups, new { @class = "mdb-select md-select2" })
                                        @Html.ValidationMessageFor(m => m.PantAgeGroupId)
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col">
                                    <div class="md-form">
                                        @Html.LabelFor(m => m.PantSizeId, new { @class = "select2-label" })
                                        @Html.DropDownListFor(m => m.PantSizeId, Model.AvailablePantSizes, new { @class = "mdb-select md-select2" })
                                        @Html.ValidationMessageFor(m => m.PantSizeId)
                                    </div>                                    
                                </div>
                                <div id="pantLength" class="col hidden-xs-up">
                                    <div class="md-form">
                                        @Html.LabelFor(m => m.PantLengthSizeId, new { @class = "select2-label" })
                                        @Html.DropDownListFor(m => m.PantLengthSizeId, Model.AvailablePantLengthSizes, new { @class = "mdb-select md-select2" })
                                        @Html.ValidationMessageFor(m => m.PantLengthSizeId)
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!--/Second column-->
                    </div>
                    <!--/Eigth row-->

                    <!--Ninth row-->
                    <div class="row mt-1">
                        <!--First column-->
                        <div class="col">
                            <div id="divUnderwearSizes" class="md-form">
                                @Html.TextBoxFor(m => m.UnderwearSize, new { @class = "form-control validate" })
                                @Html.LabelFor(m => m.UnderwearSize)
                                @Html.ValidationMessageFor(m => m.UnderwearSize)
                            </div>
                        </div>
                        <!--/First column-->

                        <!--Second column-->
                        <div class="col">
                            <div id="divShoeSizes" class="md-form">
                                @Html.TextBoxFor(m => m.ShoeSize, new { @class = "form-control validate" })
                                @Html.LabelFor(m => m.ShoeSize)
                                @Html.ValidationMessageFor(m => m.ShoeSize)
                            </div>
                        </div>
                        <!--/Second column-->

                    </div>
                    <!--/Ninth row-->

                    <!--Tenth row-->
                    <div class="row mt-2">
                        <div class="col">
                            <div class="md-form">
                                <i class="fa fa-comment prefix"></i>
                                @Html.TextAreaFor(m => m.Comments, new { @class = "md-textarea validate"})
                                @Html.LabelFor(m => m.Comments)
                                @Html.ValidationMessageFor(m => m.Comments)
                            </div>                            
                        </div>
                    </div>
                    <!--/Tenth row-->

                    <!--Eleventh row-->
                    <div class="row mt-2 text-center">
                        <div class="col">
                            <button type="submit" class="btn btn-primary btn-rounded btn-lg">Submit</button>
                        </div>
                    </div>
                    <!--/Eleventh row-->



                }
                <!--/Body-->
            </div>
        </div>
    </div>
    <!--/Section Clothing Request-->
</div>

@section customScript
{
    <script>

        $(document).ready(function () {

            //Ensure HTML helper checkboxes work with template CSS.
            $(':checkbox').each(function () {
                var hiddenInput = $(this).next("input:hidden");
                var label = hiddenInput.next("label");
                //temporarily remove the hidden field
                hiddenInput.remove();

                //re-add the hidden field after the label
                label.after(hiddenInput);
            });

            $('.md-select2 option[value = "0"]').attr('disabled', true);



            //$('#ShirtSizeId').prop('disabled', true);
            //$('#PantSizeId').prop('disabled', true);

            CheckNeededItems();

            if ($('#ShirtAgeGroupId').prop('disabled')) {
                $('#ShirtSizeId').prop('disabled', true);
            }

            if ($('#PantAgeGroupId').prop('disabled')) {
                $('#PantSizeId').prop('disabled', true);
            }


            $('#divNeededItems input[type="checkbox"]').on('change', function () {
                if (!this.checked) {
                    DisableInputs(this.dataset.details);
                }
                else {
                    EnableInputs(this.dataset.details);
                }
            });


            $('#GenderId').on('change', function () {
                var selectedItem = this.value;
                var ddlShirtAgeGroup = $('#ShirtAgeGroupId');
                var ddlPantAgeGroup = $('#PantAgeGroupId');

                $.ajax({
                    cache: false,
                    type: "GET",
                    url: "@(Url.RouteUrl("GetAgeGroups"))",
                    data: {
                        "genderId": selectedItem,
                        "ageGroupType" : "Shirt"
                    },
                    success: function (data) {
                        ddlShirtAgeGroup.html('');
                        ddlShirtAgeGroup.prepend('<option value="0" disabled selected>Select...</option>').trigger('change');
                        $.each(data, function(id, option) {
                            ddlShirtAgeGroup.append($('<option></option>').val(option.id).html(option.name));
                        });

                        CheckNeededItems();

                        //$('#ShirtSizeId').val('0').prop('disabled', true);    
                        
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        alert('Failed to retrieve Shirt Age Groups');
                    }
                });


                $.ajax({
                    cache: false,
                    type: "GET",
                    url: "@(Url.RouteUrl("GetAgeGroups"))",
                    data: {
                        "genderId": selectedItem,
                        "ageGroupType" : "Pant"
                    },
                    success: function (data) {
                        ddlPantAgeGroup.html('');
                        ddlPantAgeGroup.prepend('<option value="0" disabled selected>Select...</option>').trigger('change');
                        $.each(data, function(id, option) {
                            ddlPantAgeGroup.append($('<option></option>').val(option.id).html(option.name));
                        });

                        CheckNeededItems();

                        //$('#PantSizeId').val('0').prop('disabled', true);

                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        alert('Failed to retrieve Pant Age Groups');
                    }
                });

            });


            $('#ShirtAgeGroupId').on('change', function () {
                var selectedItem = this.value;
                var ddlShirtSizes = $('#ShirtSizeId');

                if (selectedItem == '0') {
                    ddlShirtSizes.prop('disabled', true);
                }
                else {
                    ddlShirtSizes.prop('disabled', false);
                }

                $.ajax({
                    cache: false,
                    type: "GET",
                    url: "@(Url.RouteUrl("GetShirtSizes"))",
                    data: {
                        "ageGroupId": selectedItem
                    },
                    success: function (data) {
                        ddlShirtSizes.html('');
                        ddlShirtSizes.prepend('<option value="0" disabled selected>Select...</option>');
                        $.each(data, function(id, option) {
                            ddlShirtSizes.append($('<option></option>').val(option.id).html(option.name));
                        });                        
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        alert('Failed to retrieve Shirt Sizes');
                    }
                });
            });

            $('#PantAgeGroupId').on('change', function () {
                var selectedItem = this.value;
                var data = $('#PantAgeGroupId').select2('data');
                var ddlPantSizes = $('#PantSizeId');
                var ddlPantLengthSizes = $('#PantLengthSizeId');


                if (selectedItem == '0') {
                    ddlPantSizes.prop('disabled', true);                    
                }
                else {
                    ddlPantSizes.prop('disabled', false);
                }


                if (data[0].text == 'Mens') {
                    $("label[for='PantSizeId']").text('Pant Waist');
                    ddlPantLengthSizes.prop('disabled', false);
                    $('#pantLength').removeClass('hidden-xs-up');
                }
                else {
                    $("label[for='PantSizeId']").text('Pant Size');
                    ddlPantLengthSizes.prop('disabled', true);
                    $('#pantLength').addClass('hidden-xs-up');
                }
                

                $.ajax({
                    cache: false,
                    type: "GET",
                    url: "@(Url.RouteUrl("GetPantSizes"))",
                    data: {
                        "ageGroupId": selectedItem
                    },
                    success: function (data) {
                        ddlPantSizes.html('');
                        ddlPantSizes.prepend('<option value="0" disabled selected>Select...</option>');

                        ddlPantLengthSizes.html('');
                        ddlPantLengthSizes.prepend('<option value="0" disabled selected>Select...</option>');


                        $.each(data, function(id, option) {
                            ddlPantSizes.append($('<option></option>').val(option.id).html(option.name));
                            ddlPantLengthSizes.append($('<option></option>').val(option.id).html(option.name));
                        });  

                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        alert('Failed to retrieve Pant Sizes');
                    }
                });
            });


            $('.md-select2').select2();
        });

        function CheckNeededItems() {
            $('#divNeededItems input[type="checkbox"]').each(function () {
                var id = this.dataset.details;

                if (!this.checked) {
                    DisableInputs(id);               
                }
                else {
                    EnableInputs(id);              
                }
            });
        }

        function DisableInputs(id) {
            switch (id) {
                case 'divShirtSizes':
                    resetSelect('#' + id + ' .mdb-select2');
                    $("#ShirtAgeGroupId").val('0').trigger('change').prop('disabled', true);

                    DisableInputHelpers(id);
                    break;
                case 'divPantSizes':
                    resetSelect('#' + id + ' .mdb-select2');
                    $("#PantAgeGroupId").val('0').trigger('change').prop('disabled', true);

                    DisableInputHelpers(id);
                    break;
                case 'divUnderwearSizes':
                    $('#' + id + ' :input')
                        .prop('disabled', true)
                        .val('');

                    DisableInputHelpers(id);
                    break;
                case 'divSockSizes':
                    if (!$('#NeedShoes').is(":checked")) {
                        $('#ShoeSize')
                            .prop('disabled', true)
                            .val('');

                        DisableInputHelpers(id);
                    }
                    break;
                case 'divShoeSizes':
                    if (!$('#NeedSocks').is(":checked")) {
                        $('#ShoeSize')
                            .prop('disabled', true)
                            .val('');

                        DisableInputHelpers(id);
                    }                    
                    break;
                default:
                    break;
            }

            
        }

        function DisableInputHelpers(id) {
            $('#' + id + " :header").addClass('disabled');
            $('#' + id + " label").removeClass('active').addClass('disabled');
            $('#' + id + " i").removeClass('active');
        }

        function EnableInputs(id) {
            if (id == 'divSockSizes') {
                id = 'divShoeSizes';

                EnableInput(id);
            }
            else if (id == 'divShirtSizes' || id == 'divPantSizes') {

                if ($('#GenderId').val() != null) {
                    EnableInput(id);
                }
            }
            else {
                EnableInput(id);
            }
           
        }

        function EnableInput(id) {
            $('#' + id + " :input").prop('disabled', false);
            $('#' + id + " :header").removeClass('disabled');
            $('#' + id + " label").removeClass('disabled');  
        }

        function resetSelect(id) {
            $(id).val('0').trigger('change');
        }

    </script>   
};

